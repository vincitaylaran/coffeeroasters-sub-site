@import "mixins";
@import "functions";

.container {
  .question {
    cursor: pointer;
    @include flex(row) {
      justify-content: space-between;
    }

    h4.title {
      color: color(grey);
      margin: 0;
      margin-bottom: 32px;

      @media (min-width: breakpoint(tablet)) {
        font-size: heading(
          h3
        ); // The heading function returns rem units when you specify the heading type
      }

      @media (min-width: breakpoint(desktop)) {
        font-size: heading(h2);
      }
    }

    // Changes the color of the arrow icon when hovering over the entire panel
    &:hover {
      .icon {
        path {
          fill: #66d2cf;
        }
      }
    }

    &__disabled {
      * {
        opacity: 0.5;
      }
    }
  }

  .answers {
    // The "display" property is controlled within the Expansion Panel component. See ExpansionPanel.tsx in components.
    gap: 16px;
    @media (min-width: breakpoint(tablet)) {
      grid-auto-flow: column;
    }
    @media (min-width: breakpoint(laptop)) {
      gap: 0;
    }

    margin-bottom: 96px;

    .answer {
      cursor: pointer;
      background: color(spring-wood);
      height: 140px;
      padding: 20px 22px 20px;

      @media (max-width: breakpoint(mobile-s)) {
        a {
          p.answerDesc {
            margin: 10px 0;
          }
        }
        padding: 10px 15px 0;
        @include flex {
          align-items: center;
        }
      }

      @media (min-width: breakpoint(tablet)) {
        padding-top: 32px;
        height: 250px;
        width: 223px;
      }

      @media (min-width: breakpoint(laptop)) {
        width: 228px;
      }

      h4.answerTitle {
        color: color(dark-grey-blue);
        margin: 0;
        font-weight: font-weight(extra-bold);
      }

      &__selected {
        h4.answerTitle,
        p {
          color: white;
        }
        background: color(dark-cyan);
      }
    }
  }

  .arrow {
    padding-top: 10px;
    @include flex(row) {
      align-items: flex-start;
    }

    &__flipped {
      align-items: flex-end;
      transform: rotate(180deg);
      transform-origin: 50% 50%;
    }
  }
}
